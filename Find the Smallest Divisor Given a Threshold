class Solution {
public:
     bool isPossible(vector<int>& nums, int mid, int target){
         int n = nums.size();
         int sum =0;
         for(int i =0;i<n;i++){
             sum+= ceil((double)nums[i]/(double)mid);
             if(sum>target) return false;
         }
         return true;
     }


    int smallestDivisor(vector<int>& nums, int threshold) {
         int s = 1 , e = *max_element(nums.begin(),nums.end()) , ans=0;
         while(s<=e){
            int mid = s+(e-s)/2;
            if(isPossible(nums,mid,threshold)){
                ans = mid;
                e = mid-1;
            }
            else s = mid+1;
         }
         return ans;
    }
};
